;; A JoyLoL implementation of the Bottom-Up MergeSort algorithm 

;; we begin with some helpful joylol words

;;clear
;;showStack

showStackOn
tracingOn
;; debugOn

;;showStackOff
;;tracingOff
;;debugOff

;;definitions

;;tests
;;definitionsIn

;; Now we look at the mergeSort algorithm

(
  {
    sillyPrecondition
  }       ;; precondition
  (
          ;; expects an unsorted list on top
    ()    ;; empty sorted stack
    0     ;; current index
    mergeSortRecurse
  )       ;; process stack
  {
    sillyPostcondition
  }       ;; postcondition
) extract
globals
mergeSort
define

((1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16) mergeSort ) i


