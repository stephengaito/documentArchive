% A ConTeXt MkIV module

% from file: preamble.tex after line: 0

%D \module
%D   [     file=t-joylol-coalg,
%D      version=2017.05.10,
%D        title=\CONTEXT\ User module,
%D     subtitle=The JoyLoL CoAlgebraic Extensions \ConTeXt\ module,
%D       author=Stephen Gaito,
%D         date=\currentdate,
%D    copyright=PerceptiSys Ltd (Stephen Gaito),
%D        email=stephen@perceptisys.co.uk,
%D      license=MIT License]

%C Copyright (C) 2017 PerceptiSys Ltd (Stephen Gaito)
%C
%C Permission is hereby granted, free of charge, to any person obtaining a
%C copy of this software and associated documentation files (the
%C "Software"), to deal in the Software without restriction, including
%C without limitation the rights to use, copy, modify, merge, publish,
%C distribute, sublicense, and/or sell copies of the Software, and to
%C permit persons to whom the Software is furnished to do so, subject to
%C the following conditions:
%C
%C The above copyright notice and this permission notice shall be included
%C in all copies or substantial portions of the Software.
%C
%C THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
%C OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
%C MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
%C IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
%C CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
%C TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
%C SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

% begin info
%
% title   : JoyLoL CoAlgebra definitions
% comment : Provides structured document and code generation
% status  : under development, mkiv only
%
% end info

\unprotect

\ctxloadluafile{t-joylol-coalg}

% from file: codeManipulation.tex after line: 0

\writestatus{loading}{ConTeXt User Module / JoyLoL CoAlgebra Extensions}

\usemodule[t-literate-progs]
\usemodule[t-high-lisp]
\usemodule[t-contests]

% from file: overview.tex after line: 150

\defineLitProgs[MinJoyLoL]

% from file: codeManipulation.tex after line: 50

\def\declareJoyLoLCoAlg[#1][#2]{
  \startcomponent[#2]
  \startchapter[#1]
  \directlua{thirddata.joylol.newCoAlg('#2')}
}

\let\startJoyLoLCoAlg=\declareJoyLoLCoAlg

\def\stopJoyLoLCoAlg{\relax}

% from file: codeManipulation.tex after line: 100

\def\stopJoyLoLCoAlg{
  \directlua{thirddata.joylol.createCoAlg()}
  \stopchapter
  \stopcomponent
}

% from file: codeManipulation.tex after line: 100

\unexpanded\def\srcCopyrightCCBYSA{}

% from file: codeManipulation.tex after line: 150

\unexpanded\def\targetCopyrightMIT{}

% from file: codeManipulation.tex after line: 150

\def\dependsOn[#1]{
  \directlua{thirddata.joyLoLCoAlgs.addDependency('#1')}
}

% from file: codeManipulation.tex after line: 150

\definetextbackground[JFrame]
\setuptextbackground[JFrame][location=text, background=color, backgroundcolor=gray]

% from file: codeManipulation.tex after line: 150

\def\startJoyLoLWord[#1]{
  \directlua{thirddata.joylol.newWord('#1')}
}

% from file: codeManipulation.tex after line: 200

\def\stopJoyLoLWord{
  \directlua{thirddata.joylol.endWord()}
}

% from file: codeManipulation.tex after line: 200

\def\startJoyLoLStackActionIn[#1]{
  \directlua{thirddata.joylol.newStackActionIn('#1')}
}

% from file: codeManipulation.tex after line: 200

\def\stopJoyLoLStackActionIn{
  \directlua{thirddata.joylol.endStackActionIn()}
}

% from file: codeManipulation.tex after line: 250

\def\startJoyLoLStackActionOut[#1]{
  \directlua{thirddata.joylol.newStackActionOut('#1')}
}

% from file: codeManipulation.tex after line: 250

\def\stopJoyLoLStackActionOut{
  \directlua{thirddata.joylol.endStackActionOut()}
}

% from file: codeManipulation.tex after line: 300

\def\preDataStack[#1][#2]{
  \directlua{thirddata.joylol.addPreDataStackDescription('#1', '#2')}
}

\def\postDataStack[#1]{
  \directlua{thirddata.joylol.addPostDataStackDescription('#1')}
}

% from file: codeManipulation.tex after line: 300

\def\preProcessStack[#1][#2]{
  \directlua{thirddata.joylol.addPreProcessStackDescription('#1', '#2')}
}

\def\postProcessStack[#1]{
  \directlua{thirddata.joylol.addPostProcessStackDescription('#1')}
}

% from file: codeManipulation.tex after line: 350

\defineLitProgs
  [JoyLoLCode]
  [ option=lisp, numbering=line,
    before={\noindent\startJFrame}, after=\stopJFrame
  ]

\defineLitProgs
  [MinJoyLoLCode]
  [ option=lisp, numbering=line,
    before={\noindent\startJFrame}, after=\stopJFrame
  ]

% from file: codeManipulation.tex after line: 350

\defineLitProgs
  [CHeader]
  [ option=cpp, numbering=line,
    before={\noindent\startJFrame}, after=\stopJFrame
  ]

% from file: codeManipulation.tex after line: 400

\defineLitProgs
  [CCode]
  [ option=cpp, numbering=line,
    before={\noindent\startJFrame}, after=\stopJFrame
  ]

% from file: codeManipulation.tex after line: 400

\defineLitProgs
  [LuaCode]
  [ option=lua, numbering=line,
    before={\noindent\startJFrame}, after=\stopJFrame
  ]

% from file: preamble.tex after line: 50

\protect \endinput