#!/usr/bin/env racket
#lang racket/base

(require racket/file)
(require racket/cmdline)
(require diSimp/interpreter)

(printf "diSimplex Engine in Racket, version 0.0.0\n")

(define verbose-mode (make-parameter #f))

(define files-to-interpret
  (command-line
   #:program "diSimp-check"
   #:once-each
   [("-v" "--verbose") "Interpret with verbose messages"
                       (verbose-mode #t)]
   #:args filenames ; collect all remaining arguments in a list
   filenames
  )
)

(define (interpret-file aFile)
  (if (file-exists? aFile)
    (begin
      (printf "interpreting [~a]\n" aFile)
      (file->list aFile interpret)
    )
    (printf "file [~a] not found... skipping\n" aFile)
  )
)

(define ignoreValues (map interpret-file files-to-interpret))
